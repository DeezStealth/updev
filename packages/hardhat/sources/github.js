// TODO refactor
// addSource(
// 	"github",
// 	"const apiResponse = await Functions.makeHttpRequest({"
// 	"  url: 'https://api.github.com/graphql',"
// 	"  method: 'POST',"
// 	"  headers: {"
// 	"    'Authorization': `Bearer ${secrets.apiKey}`"
// 	"  },"
// 	"  data: {"
// 	"    query: `{"
// 	"      user(login: \"${args[1]}\") {"
// 	"        createdAt"
// 	"        socialAccounts(last: 5) { nodes { url } }"
// 	"        followers { totalCount }"
// 	"        contributionsCollection { contributionCalendar { totalContributions } }"
// 	"      }"
// 	"    }`"
// 	"  },"
// 	"});"
// 	"if (apiResponse.error) {"
// 	"  throw Error('Request failed');"
// 	"}"
// 	"if (apiResponse.data.errors) {"
// 	"  throw Error(JSON.stringify(apiResponse.data.errors));"
// 	"}"
// 	"const { user } = apiResponse.data.data;"
// 	"if (!user.socialAccounts.nodes.some(r => r.url.toLowerCase().includes(args[0].toLowerCase()))) {"
// 	"  throw Error('URL Not Found');"
// 	"}"
// 	"const created = Math.floor((new Date(user.createdAt)).getTime() / 86400000);"
// 	"const uint32 = (v) => v.toString(16).padStart(64, '0');"
// 	"const hex = uint32(created) + uint32(user.followers.totalCount) + uint32(user.contributionsCollection.contributionCalendar.totalContributions);"
// 	"return Uint8Array.from(hex.match(/.{1,2}/g).map(b => parseInt(b, 16)));",
// 	false
// );