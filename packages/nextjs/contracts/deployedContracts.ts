/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    upRegistry: {
      address: "0xFa98865E75dD11cef8DCE16ad2Ac505d17994CAC",
      abi: [
        {
          inputs: [],
          name: "AlreadySetUp",
          type: "error",
        },
        {
          inputs: [],
          name: "NoPermissions",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "up",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "controller",
              type: "address",
            },
          ],
          name: "SetUp",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "_ups",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "up",
              type: "address",
            },
          ],
          name: "controller",
          outputs: [
            {
              internalType: "address",
              name: "controller",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "up",
              type: "address",
            },
          ],
          name: "keyManager",
          outputs: [
            {
              internalType: "address",
              name: "keyManager",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_up",
              type: "address",
            },
            {
              internalType: "address",
              name: "_controller",
              type: "address",
            },
          ],
          name: "setUP",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "controller",
              type: "address",
            },
          ],
          name: "up",
          outputs: [
            {
              internalType: "address",
              name: "up",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "offset",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "limit",
              type: "uint256",
            },
          ],
          name: "ups",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  11155111: {
    upDevAccountNFT: {
      address: "0x19CA7F1EFAcC76dE78BF51F0faED1320275f0deC",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_router",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "_donID",
              type: "bytes32",
            },
            {
              internalType: "bool",
              name: "_force",
              type: "bool",
            },
            {
              internalType: "uint32",
              name: "_gasLimit",
              type: "uint32",
            },
            {
              internalType: "uint64",
              name: "_subscriptionId",
              type: "uint64",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "AlreadyClaimed",
          type: "error",
        },
        {
          inputs: [],
          name: "ERC725Y_DataKeysValuesEmptyArray",
          type: "error",
        },
        {
          inputs: [],
          name: "ERC725Y_DataKeysValuesLengthMismatch",
          type: "error",
        },
        {
          inputs: [],
          name: "ERC725Y_MsgValueDisallowed",
          type: "error",
        },
        {
          inputs: [],
          name: "EmptyArgs",
          type: "error",
        },
        {
          inputs: [],
          name: "EmptySource",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "storedData",
              type: "bytes",
            },
          ],
          name: "InvalidExtensionAddress",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "InvalidFunctionSelector",
          type: "error",
        },
        {
          inputs: [],
          name: "LSP4TokenNameNotEditable",
          type: "error",
        },
        {
          inputs: [],
          name: "LSP4TokenSymbolNotEditable",
          type: "error",
        },
        {
          inputs: [],
          name: "LSP4TokenTypeNotEditable",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "callIndex",
              type: "uint256",
            },
          ],
          name: "LSP8BatchCallFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "LSP8CannotSendToAddressZero",
          type: "error",
        },
        {
          inputs: [],
          name: "LSP8CannotUseAddressZeroAsOperator",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
          ],
          name: "LSP8NonExistentTokenId",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
          ],
          name: "LSP8NonExistingOperator",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "tokenOwner",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
          ],
          name: "LSP8NotTokenOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "tokenReceiver",
              type: "address",
            },
          ],
          name: "LSP8NotifyTokenReceiverContractMissingLSP1Interface",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "tokenReceiver",
              type: "address",
            },
          ],
          name: "LSP8NotifyTokenReceiverIsEOA",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
          ],
          name: "LSP8OperatorAlreadyAuthorized",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "caller",
              type: "address",
            },
            {
              internalType: "address",
              name: "tokenOwner",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
          ],
          name: "LSP8RevokeOperatorNotAuthorized",
          type: "error",
        },
        {
          inputs: [],
          name: "LSP8TokenContractCannotHoldValue",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
          ],
          name: "LSP8TokenIdAlreadyMinted",
          type: "error",
        },
        {
          inputs: [],
          name: "LSP8TokenIdFormatNotEditable",
          type: "error",
        },
        {
          inputs: [],
          name: "LSP8TokenIdsDataEmptyArray",
          type: "error",
        },
        {
          inputs: [],
          name: "LSP8TokenIdsDataLengthMismatch",
          type: "error",
        },
        {
          inputs: [],
          name: "LSP8TokenOwnerCannotBeOperator",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "oldOwner",
              type: "address",
            },
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "LSP8TokenOwnerChanged",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "functionSelector",
              type: "bytes4",
            },
          ],
          name: "NoExtensionFoundForFunctionSelector",
          type: "error",
        },
        {
          inputs: [],
          name: "NoInlineSecrets",
          type: "error",
        },
        {
          inputs: [],
          name: "OnlyRouterCanFulfill",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "callerAddress",
              type: "address",
            },
          ],
          name: "OwnableCallerNotTheOwner",
          type: "error",
        },
        {
          inputs: [],
          name: "OwnableCannotSetZeroAddressAsOwner",
          type: "error",
        },
        {
          inputs: [],
          name: "Soulbound",
          type: "error",
        },
        {
          inputs: [],
          name: "SourceNameBusy",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "up",
              type: "address",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
          ],
          name: "Claimed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "dataKey",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "dataValue",
              type: "bytes",
            },
          ],
          name: "DataChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "up",
              type: "address",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "isOK",
              type: "bool",
            },
          ],
          name: "Fulfilled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "name",
              type: "string",
            },
          ],
          name: "NewSource",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "tokenOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "operatorNotificationData",
              type: "bytes",
            },
          ],
          name: "OperatorAuthorizationChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "tokenOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "notified",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "operatorNotificationData",
              type: "bytes",
            },
          ],
          name: "OperatorRevoked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "RequestFulfilled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "RequestSent",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "up",
              type: "address",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "string",
              name: "provider",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "version",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "id",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "ipfs",
              type: "string",
            },
          ],
          name: "Requested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "dataKey",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "dataValue",
              type: "bytes",
            },
          ],
          name: "TokenIdDataChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "force",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          stateMutability: "payable",
          type: "fallback",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "code",
              type: "string",
            },
          ],
          name: "addSource",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "operatorNotificationData",
              type: "bytes",
            },
          ],
          name: "authorizeOperator",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "tokenOwner",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes[]",
              name: "data",
              type: "bytes[]",
            },
          ],
          name: "batchCalls",
          outputs: [
            {
              internalType: "bytes[]",
              name: "results",
              type: "bytes[]",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
          ],
          name: "claim",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "dataKey",
              type: "bytes32",
            },
          ],
          name: "getData",
          outputs: [
            {
              internalType: "bytes",
              name: "dataValue",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32[]",
              name: "dataKeys",
              type: "bytes32[]",
            },
          ],
          name: "getDataBatch",
          outputs: [
            {
              internalType: "bytes[]",
              name: "dataValues",
              type: "bytes[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32[]",
              name: "tokenIds",
              type: "bytes32[]",
            },
            {
              internalType: "bytes32[]",
              name: "dataKeys",
              type: "bytes32[]",
            },
          ],
          name: "getDataBatchForTokenIds",
          outputs: [
            {
              internalType: "bytes[]",
              name: "dataValues",
              type: "bytes[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "dataKey",
              type: "bytes32",
            },
          ],
          name: "getDataForTokenId",
          outputs: [
            {
              internalType: "bytes",
              name: "dataValue",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
          ],
          name: "getOperatorsOf",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "up",
              type: "address",
            },
          ],
          name: "getPendingRequests",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "up",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "provider",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "version",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "id",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "ipfs",
                  type: "string",
                },
                {
                  internalType: "bytes32",
                  name: "tokenId",
                  type: "bytes32",
                },
                {
                  internalType: "bool",
                  name: "isFulfilled",
                  type: "bool",
                },
                {
                  internalType: "bool",
                  name: "isOK",
                  type: "bool",
                },
                {
                  internalType: "bool",
                  name: "isClaimed",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
              ],
              internalType: "struct upDevAccountNFT.Request[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "offset",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "limit",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "up",
              type: "address",
            },
          ],
          name: "getRequests",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "up",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "provider",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "version",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "id",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "ipfs",
                  type: "string",
                },
                {
                  internalType: "bytes32",
                  name: "tokenId",
                  type: "bytes32",
                },
                {
                  internalType: "bool",
                  name: "isFulfilled",
                  type: "bool",
                },
                {
                  internalType: "bool",
                  name: "isOK",
                  type: "bool",
                },
                {
                  internalType: "bool",
                  name: "isClaimed",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
              ],
              internalType: "struct upDevAccountNFT.Request[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getSources",
          outputs: [
            {
              internalType: "string[]",
              name: "",
              type: "string[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "response",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "err",
              type: "bytes",
            },
          ],
          name: "handleOracleFulfillment",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
          ],
          name: "isOperatorFor",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "up",
              type: "address",
            },
          ],
          name: "pendingNum",
          outputs: [
            {
              internalType: "uint256",
              name: "num",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "request",
          outputs: [
            {
              internalType: "address",
              name: "up",
              type: "address",
            },
            {
              internalType: "string",
              name: "provider",
              type: "string",
            },
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
            {
              internalType: "string",
              name: "id",
              type: "string",
            },
            {
              internalType: "string",
              name: "ipfs",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
            {
              internalType: "bool",
              name: "isFulfilled",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "isOK",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "isClaimed",
              type: "bool",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
          ],
          name: "requestId",
          outputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "up",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "requests",
          outputs: [
            {
              internalType: "bytes32",
              name: "ids",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
            {
              internalType: "bool",
              name: "notify",
              type: "bool",
            },
            {
              internalType: "bytes",
              name: "operatorNotificationData",
              type: "bytes",
            },
          ],
          name: "revokeOperator",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "up",
              type: "address",
            },
            {
              internalType: "uint64",
              name: "donHostedSecretsVersion",
              type: "uint64",
            },
            {
              internalType: "string",
              name: "provider",
              type: "string",
            },
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
            {
              internalType: "string",
              name: "id",
              type: "string",
            },
            {
              internalType: "string",
              name: "ipfs",
              type: "string",
            },
          ],
          name: "sendRequest",
          outputs: [
            {
              internalType: "bytes32",
              name: "_requestId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "dataKey",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "dataValue",
              type: "bytes",
            },
          ],
          name: "setData",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32[]",
              name: "dataKeys",
              type: "bytes32[]",
            },
            {
              internalType: "bytes[]",
              name: "dataValues",
              type: "bytes[]",
            },
          ],
          name: "setDataBatch",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32[]",
              name: "tokenIds",
              type: "bytes32[]",
            },
            {
              internalType: "bytes32[]",
              name: "dataKeys",
              type: "bytes32[]",
            },
            {
              internalType: "bytes[]",
              name: "dataValues",
              type: "bytes[]",
            },
          ],
          name: "setDataBatchForTokenIds",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "dataKey",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "dataValue",
              type: "bytes",
            },
          ],
          name: "setDataForTokenId",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "_subscriptionId",
              type: "uint64",
            },
          ],
          name: "setSubscriptionId",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
          ],
          name: "source",
          outputs: [
            {
              internalType: "string",
              name: "code",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "sources",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "up",
              type: "address",
            },
          ],
          name: "stringUP",
          outputs: [
            {
              internalType: "string",
              name: "stringUP",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "tokenOwner",
              type: "address",
            },
          ],
          name: "tokenIdsOf",
          outputs: [
            {
              internalType: "bytes32[]",
              name: "",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "tokenId",
              type: "bytes32",
            },
          ],
          name: "tokenOwnerOf",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "transfer",
          outputs: [],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
            {
              internalType: "bytes32[]",
              name: "",
              type: "bytes32[]",
            },
            {
              internalType: "bool[]",
              name: "",
              type: "bool[]",
            },
            {
              internalType: "bytes[]",
              name: "",
              type: "bytes[]",
            },
          ],
          name: "transferBatch",
          outputs: [],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        authorizeOperator: "contracts/LSP8Soulbound.sol",
        balanceOf: "contracts/LSP8Soulbound.sol",
        batchCalls: "contracts/LSP8Soulbound.sol",
        getData: "contracts/LSP8Soulbound.sol",
        getDataBatch: "contracts/LSP8Soulbound.sol",
        getDataBatchForTokenIds: "contracts/LSP8Soulbound.sol",
        getDataForTokenId: "contracts/LSP8Soulbound.sol",
        getOperatorsOf: "contracts/LSP8Soulbound.sol",
        isOperatorFor: "contracts/LSP8Soulbound.sol",
        owner: "contracts/LSP8Soulbound.sol",
        renounceOwnership: "contracts/LSP8Soulbound.sol",
        revokeOperator: "contracts/LSP8Soulbound.sol",
        setData: "contracts/LSP8Soulbound.sol",
        setDataBatch: "contracts/LSP8Soulbound.sol",
        setDataBatchForTokenIds: "contracts/LSP8Soulbound.sol",
        setDataForTokenId: "contracts/LSP8Soulbound.sol",
        supportsInterface: "contracts/LSP8Soulbound.sol",
        tokenIdsOf: "contracts/LSP8Soulbound.sol",
        tokenOwnerOf: "contracts/LSP8Soulbound.sol",
        totalSupply: "contracts/LSP8Soulbound.sol",
        transfer: "contracts/LSP8Soulbound.sol",
        transferBatch: "contracts/LSP8Soulbound.sol",
        transferOwnership: "contracts/LSP8Soulbound.sol",
        handleOracleFulfillment:
          "@chainlink/contracts/src/v0.8/functions/dev/v1_0_0/FunctionsClient.sol",
      },
    },
    upRegistry: {
      address: "0x86C685520288EF50c07A3bE7d389A7E43676C830",
      abi: [
        {
          inputs: [],
          name: "AlreadySetUp",
          type: "error",
        },
        {
          inputs: [],
          name: "NoPermissions",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "up",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "controller",
              type: "address",
            },
          ],
          name: "SetUp",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "_ups",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "up",
              type: "address",
            },
          ],
          name: "controller",
          outputs: [
            {
              internalType: "address",
              name: "controller",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "up",
              type: "address",
            },
          ],
          name: "keyManager",
          outputs: [
            {
              internalType: "address",
              name: "keyManager",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_up",
              type: "address",
            },
            {
              internalType: "address",
              name: "_controller",
              type: "address",
            },
          ],
          name: "setUP",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "controller",
              type: "address",
            },
          ],
          name: "up",
          outputs: [
            {
              internalType: "address",
              name: "up",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "offset",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "limit",
              type: "uint256",
            },
          ],
          name: "ups",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
